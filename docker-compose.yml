services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  transformation:
    build:
      context: .
      dockerfile: transformation_service/Dockerfile
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./storage:/src/storage
      - ./transformation_service:/src/transformation_services
      - ./common:/src/common
      - ./configs:/src/configs
  loader:
    build:
      context: .
      dockerfile: loader_service/Dockerfile
    ports:
      - 8001:8001
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully 
    volumes:
      - ./storage:/src/storage
      - ./loader_service:/src/loader_service
      - ./common:/src/common
      - ./configs:/src/configs
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  migration:
    build:
      context: .
      dockerfile: migrations/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
